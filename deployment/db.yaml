apiVersion: v1
kind: PersistentVolume
metadata:
  name: strapi-db-pv
  labels:
    type: local
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  hostPath:
    path: "/var/lib/rancher/k3s/storage/strapi-db-pv"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: strapi-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strapi-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: strapi-db
  template:
    metadata:
      labels:
        app: strapi-db
    spec:
      containers:
        - name: postgresql
          image: postgres:14.1-alpine
          env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata # Workarround see https://github.com/docker-library/postgres/issues/696
          resources:
            requests:
              memory: "256Mi"
              cpu: "512m"
            limits:
              memory: "1024Mi"
              cpu: "2048m"
          ports:
            - containerPort: 5432
              name: postgresql
          envFrom:
            - configMapRef:
                name: strapi-postgres
            - secretRef:
                name: strapi-postgres-secret # Managed by external secret store
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: strapi-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: strapi-db
spec:
  selector:
    app: strapi-db
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: postgresql
